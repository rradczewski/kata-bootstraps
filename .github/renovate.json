{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": ["config:recommended", "docker:enableMajor"],
  "ignorePresets": ["workarounds:javaLTSVersions"],
  "dependencyDashboard": true,
  "automerge": true,
  "automergeType": "branch",
  "commitMessagePrefix": "[{{packageFileDir}}] {{semanticPrefix}}",
  "separateMajorMinor": false,
  "additionalBranchPrefix": "{{packageFileDir}}-",
  "packageRules": [
    {
      "matchDatasources": ["docker"],
      "defaultRegistryUrls": ["https://index.docker.io"]
    },
    {
      "matchFileNames": ["elm/**", "elm/*"],
      "groupName": "elm",
      "separateMajorMinor": false
    },
    {
      "matchFileNames": ["purescript/**", "purescript/*"],
      "groupName": "purescript",
      "separateMajorMinor": false
    },
    {
      "matchDepNames": ["haskell-stack", "haskell-ghc"],
      "additionalBranchPrefix": "haskell-",
      "groupName": "haskell",
      "separateMajorMinor": false
    },
    {
      "matchPackageNames": ["docker.io/eclipse-temurin", "eclipse-temurin"],
      "versioning": "regex:^(?<major>\\d+)(\\.(?<minor>\\d+))?(\\.(?<patch>\\d+))?(_(?<build>\\d+))?(-(?<compatibility>.*))?$"
    },
    {
      "matchPackageNames": ["docker.io/maven", "maven"],
      "versioning": "regex:^(?<minor>\\d+)(\\.(?<patch>\\d+))?(\\.(?<build>\\d+))?-eclipse-temurin-(?<major>\\d+)?(-(?<compatibility>.*))?$"
    },
    {
      "matchFileNames": ["(^|/|\\.)pom\\.xml$", "(^|/|\\.)build\\.gradle$"],
      "matchDepNames": ["eclipse-temurin"],
      "matchDatasources": ["docker"],
      "allowedVersions": "/^[0-9]+$/"
    },
    {
      "matchDepNames": ["haskell"],
      "matchDatasources": ["docker"],
      "enabled": false
    },
    {
      "matchDepTypes": ["golang"],
      "rangeStrategy": "replace",
      "versioning": "npm"
    },
    {
      "matchDepTypes": ["golang"],
      "matchDepNames": ["mcr.microsoft.com/devcontainers/go"],
      "groupName": "golang-update"
    },
    {
      "matchDepNames": [
        "scala-docker-image-java-version",
        "scala-docker-image-sbt-version",
        "scala-docker-image-scala-version",
        "sbt/sbt",
        "scala",
        "/^scala-docker-image.+/"
      ],
      "groupName": "sbt-update"
    },
    {
      "matchCurrentVersion": "^2",
      "matchPackageNames": ["scala", "scala-docker-image-scala-version"],
      "allowedVersions": "^2"
    },
    {
      "matchFileNames": ["kotlin/**"],
      "matchPackageNames": ["eclipse-temurin", "docker.io/eclipse-temurin"],
      "additionalBranchPrefix": "kotlin-",
      "groupName": "jdk-update"
    },
    {
      "matchFileNames": ["java/**"],
      "matchPackageNames": [
        "eclipse-temurin",
        "docker.io/eclipse-temurin",
        "docker.io/maven"
      ],
      "additionalBranchPrefix": "java-",
      "groupName": "jdk-update"
    }
  ],
  "customDatasources": {
    "haskell-ghc": {
      "defaultRegistryUrlTemplate": "https://www.stackage.org/snapshots",
      "transformTemplates": [
        "{ \n    \"releases\": $reduce($.snapshots, $append) @ $release.[{\n        \"stack\": $release[0],\n        \"lts\": $exists($match($release[0], /^lts/)),\n        \"ghc\": $match($release[1], /.+(ghc-.+)\\)/).groups[0]\n    }]\n}",
        "{ \"releases\": releases[lts=true].{ \"version\": $substring(ghc, 4) } }"
      ]
    },
    "haskell-stack": {
      "defaultRegistryUrlTemplate": "https://www.stackage.org/snapshots",
      "transformTemplates": [
        "{ \n    \"releases\": $reduce($.snapshots, $append) @ $release.[{\n        \"stack\": $release[0],\n        \"lts\": $exists($match($release[0], /^lts/)),\n        \"ghc\": $match($release[1], /.+(ghc-.+)\\)/).groups[0]\n    }]\n}",
        "{ \"releases\": releases[lts=true].{ \"version\": stack } }"
      ]
    }
  },
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": ["(^|/|\\.)Dockerfile$", "(^|/)Dockerfile[^/]*$"],
      "depNameTemplate": "haskell-ghc",
      "matchStrings": ["FROM haskell:(?<currentValue>.+)"],
      "datasourceTemplate": "custom.haskell-ghc",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/|\\.)stack\\.yaml$"],
      "depNameTemplate": "haskell-stack",
      "matchStrings": ["\\nresolver: (?<currentValue>lts-.+?)\\s"],
      "datasourceTemplate": "custom.haskell-stack",
      "versioningTemplate": "regex:lts-(?<major>\\d+)\\.(?<minor>\\d+)"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/|\\.)elm\\.json$"],
      "matchStrings": ["\"elm-version\"\\s*:\\s*\"(?<currentValue>.*)\""],
      "depNameTemplate": "elm/compiler",
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/|\\.)elm\\.json$"],
      "matchStrings": [
        "\"(?<depName>.*/.*?)\"\\s*:\\s*\"(?<currentValue>.*)\""
      ],
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/|\\.)Dockerfile$", "(^|/)Dockerfile[^/]*$"],
      "matchStrings": [
        "renovate: datasource=(?<datasource>.*?) depName=(?<depName>\\S*)( packageName=(?<packageName>\\S*))?( versioning=(?<versioning>\\S*))?( extractVersion=(?<extractVersion>\\S*))?\\s+ENV .*?_VERSION=(?<currentValue>.*)\\s",
        "renovate: datasource=(?<datasource>.*?) depName=(?<depName>\\S*)( packageName=(?<packageName>\\S*))?( versioning=(?<versioning>\\S*))?( extractVersion=(?<extractVersion>\\S*))?\\s+ARG .*?_VERSION=(?<currentValue>.*)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/)packages.dhall[^/]*$"],
      "matchStrings": [
        "-- renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s+let upstream =.*?(?<currentValue>psc-.*)/packages.dhall\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "fileMatch": ["\\.?devcontainer.json$"],
      "matchStrings": [
        "\"image\" *: *\"(?<depName>.+?):(?<currentValue>.+?)\",?"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/)gleam\\.toml$"],
      "matchStringsStrategy": "recursive",
      "matchStrings": [
        "\\[(dependencies|dev-dependencies)\\]\\s*[^\\[]*",
        "(?<depName>.+?) *= *\"(?<currentValue>.+?)\""
      ],
      "versioningTemplate": "hex",
      "datasourceTemplate": "hex"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/|\\.)pom\\.xml$", "(^|/|\\.)build\\.gradle$"],
      "matchStrings": [
        "<java\\.version>(?<currentValue>.*?)<\\/java\\.version>",
        "<maven\\.compiler\\.source>(?<currentValue>.*?)<\\/maven\\.compiler\\.source>",
        "<maven\\.compiler\\.target>(?<currentValue>.*?)<\\/maven\\.compiler\\.target>",
        "<maven\\.compiler\\.release>(?<currentValue>.*?)<\\/maven\\.compiler\\.release>",
        "jvmToolchain\\((?<currentValue>.*?)\\)"
      ],
      "depNameTemplate": "eclipse-temurin",
      "datasourceTemplate": "docker",
      "versioningTemplate": "regex:(?<major>\\d+).*"
    },
    {
      "customType": "regex",
      "fileMatch": ["(^|/).+\\..sproj$"],
      "matchStrings": [
        "<TargetFramework>net(?<currentValue>.*?)<\\/TargetFramework>"
      ],
      "depNameTemplate": "mcr.microsoft.com/devcontainers/dotnet",
      "datasourceTemplate": "docker"
    }
  ]
}
